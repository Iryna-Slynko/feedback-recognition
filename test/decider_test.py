import unittest
import numpy as np
import json
from recognition import decider


class TestDecider(unittest.TestCase):
    UPVOTE = np.asarray(
        json.loads(
            """
            [[[[267, 326]], [[244, 350]], [[233, 360]], [[232, 360]], [[227, 359]], [[219, 353]], [[215, 349]], [[211, 343]], [[209, 335]], [[209, 326]],
            [[215, 318]], [[216, 317]], [[220, 317]]], [[[42, 302]], [[32, 346]], [[29, 352]], [[28, 353]], [[20, 358]], [[15, 360]], [[0, 360]], [[1,
            356]], [[40, 285]], [[42, 297]]], [[[369, 221]], [[364, 231]], [[362, 234]], [[361, 235]], [[357, 238]], [[353, 240]], [[347, 242]], [[239,
            271]], [[234, 272]], [[220, 265]], [[217, 263]], [[217, 260]], [[220, 235]], [[227, 230]], [[338, 200]], [[344, 199]], [[351, 200]], [[365,
            208]], [[366, 211]]], [[[56, 245]], [[41, 282]], [[40, 283]], [[0, 233]], [[0, 206]], [[20, 189]], [[40, 206]], [[41, 207]], [[48, 215]],
            [[56, 244]]], [[[146, 136]], [[144, 143]], [[113, 164]], [[101, 172]], [[99, 173]], [[92, 175]], [[85, 176]], [[74, 177]], [[66, 177]], [[56,
            176]], [[32, 173]], [[30, 172]], [[28, 170]], [[27, 165]], [[36, 162]], [[146, 135]]], [[[303, 98]], [[277, 186]], [[241, 228]], [[230, 223]],
            [[230, 222]], [[233, 213]], [[236, 205]], [[258, 147]], [[262, 137]], [[267, 131]], [[301, 96]], [[302, 95]]], [[[278, 36]], [[286, 39]],
            [[281, 52]], [[268, 66]], [[253, 80]], [[157, 131]], [[150, 131]], [[276, 36]]]]
        """
        )
    )
    DOWNVOTE = np.asarray(
        json.loads(
            """
            [[[[284, 386]], [[282, 386]], [[218, 323]], [[208, 313]], [[190, 288]], [[190, 285]], [[270, 367]]], [[[263, 264]], [[259, 264]], [[256, 263]],
            [[234, 243]], [[233, 242]], [[239, 231]], [[245, 228]], [[260, 224]]], [[[341, 178]], [[336, 197]], [[333, 200]], [[330, 201]], [[320, 204]],
            [[319, 204]], [[300, 197]], [[332, 158]], [[334, 158]], [[336, 159]], [[338, 162]], [[341, 173]]], [[[1, 86]], [[67, 122]], [[65, 130]], [[63,
            134]], [[59, 134]], [[55, 133]], [[49, 131]], [[33, 125]], [[6, 110]], [[0, 106]], [[0, 86]]], [[[357, 113]], [[341, 114]], [[338, 113]],
            [[318, 65]], [[312, 49]], [[312, 48]], [[313, 46]], [[314, 45]], [[318, 44]], [[335, 53]], [[338, 55]], [[340, 57]], [[346, 66]], [[355, 94]],
            [[357, 103]]], [[[136, 89]], [[135, 90]], [[74, 124]], [[72, 125]], [[69, 123]], [[71, 119]], [[114, 54]], [[122, 44]], [[123, 43]], [[135,
            81]]]]
        """
        )
    )

    def test_upvote_decides(self):
        self.assertTrue(decider.Decider(self.UPVOTE).is_decided())

    def test_upvote_is_upvote(self):
        self.assertTrue(decider.Decider(self.UPVOTE).is_upvote())

    def test_downvote_decided(self):
        self.assertTrue(decider.Decider(self.DOWNVOTE).is_decided())

    def test_downvote_is_not_upvote(self):
        self.assertFalse(decider.Decider(self.DOWNVOTE).is_upvote())

    def test_no_data(self):
        self.assertFalse(decider.Decider(np.array([])).is_decided())

    def test_wrong_gesture(self):
        wrong_gesture = np.asarray(
            json.loads(
                """
                [[[[639, 397]], [[638, 398]], [[631, 399]], [[576, 401]], [[463, 404]], [[434, 404]], [[440, 402]], [[446, 401]], [[573, 395]], [[631,
                395]]], [[[354, 405]], [[346, 407]], [[304, 409]], [[173, 408]], [[156, 407]], [[155, 406]], [[154, 404]], [[165, 398]], [[173, 395]],
                [[177, 394]], [[178, 394]], [[348, 402]], [[353, 404]]], [[[89, 105]], [[73, 395]], [[67, 388]], [[28, 317]], [[28, 316]], [[61, 101]],
                [[74, 86]], [[84, 86]], [[89, 89]]]]
                """
            )
        )
        self.assertFalse(decider.Decider(wrong_gesture).is_decided())


if __name__ == "__main__":
    unittest.main()
